@using Ubik.Web.Components.AntiCorruption.ViewModels.Devices
@using Ubik.Web.Components.AntiCorruption.Contracts
@model DeviceViewModel
<section class="content">
    <div class="row">

        <div class="col-md-6">
            <div class="box box-default">
                @using (Html.BeginForm("UpdateLayout", "Devices", FormMethod.Post, new { role = "form" }))
                {
                    @Html.AntiForgeryToken()


                    <div class="box-body">

                        <div class="form-group hidden">
                            @Html.LabelFor(m => m.Id)
                            @Html.HiddenFor(m => m.Id, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Id, "", new { @class = "" })
                        </div>
                        <div class="form-group">
                            <div class="input-group">
                                <span class="input-group-addon">@Html.LabelFor(m => m.FriendlyName)</span>
                                @Html.TextBoxFor(m => m.FriendlyName, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.FriendlyName, "", new { @class = "" })
                        </div>
                        <div class="form-group">
                            <div class="input-group">
                                <span class="input-group-addon">@Html.LabelFor(m => m.Path)</span>
                                @Html.TextBoxFor(m => m.Path, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.Path, "", new { @class = "" })
                        </div>
                        <div class="form-group">
                            @*TODO: fix this html filed*@
                            <div class="">

                                <label class="radio-inline"><input type="radio" name="@Html.NameFor(m => m.Flavor)" asp-for="Flavor" value="Empty">Empty</label>
                                <label class="radio-inline"><input type="radio" name="@Html.NameFor(m => m.Flavor)" asp-for="Flavor" value="List">List</label>
                                <label class="radio-inline"><input type="radio" name="@Html.NameFor(m => m.Flavor)" asp-for="Flavor" value="Details">Details</label>
                            </div>
                            @Html.ValidationMessageFor(m => m.Flavor, "", new { @class = "" })
                        </div>
                        <div class="form-group">

                        </div>
                    </div>
                    <div class="box-footer clearfix">
                        <div class="form-group ">
                            <button type="submit" class="btn btn-default pull-right">Submit</button>
                        </div>
                    </div>
                }
            </div>
            @if (Model.Id > default(int))
            {
                var newSectionViewModel = new SectionViewModel() { DeviceId = Model.Id };
                @Html.Partial("~/Areas/Backoffice/Views/Devices/Partials/DeviceAddSection.cshtml", newSectionViewModel)
                @Html.Partial("~/Areas/Backoffice/Views/Devices/Partials/DeviceSections.cshtml", Model)
            }
        </div>
    </div>
</section>