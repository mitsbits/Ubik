@using Ubik.Web.Components.AntiCorruption.ViewModels.Devices
@model SlotViewModel
@{
    var _mGroup = Model.AvailableModules.GroupBy(x => x.ModuleGroup);
    var moduleGroups = _mGroup.Select(x => new SelectListGroup() { Name = x.Key, Disabled = false });
    var moduleOptions = new List<SelectListItem>(new[] { new SelectListItem() { Group = new SelectListGroup() } })
        .Union(_mGroup.SelectMany(g => g.Select(x =>
       new SelectListItem() { Group = moduleGroups.Single(o => o.Name == g.Key), Value = x.GetType().FullName, Text = x.FriendlyName }))
        .OrderBy(x => x.Group.Name).ThenBy(x => x.Value).ToList());
}
@using (Html.BeginForm("NewSlot", "Devices", FormMethod.Post, new { role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="box-body">

        <div class="form-group hidden">
            @Html.LabelFor(m => m.SectionId)
            @Html.HiddenFor(m => m.SectionId, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.SectionId, "", new { @class = "" })
        </div>
        <div class="form-group hidden">
            @Html.LabelFor(m => m.SectionIdentifier)
            @Html.HiddenFor(m => m.SectionIdentifier, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.SectionIdentifier, "", new { @class = "" })
        </div>
        <div class="form-group">
            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(m => m.Ordinal)</span>
                @Html.TextBoxFor(m => m.Ordinal, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(m => m.Ordinal, "", new { @class = "" })
        </div>
        <div class="form-group">
            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(m => m.Enabled)</span>
                @Html.EditorFor(m => m.Enabled, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(m => m.Enabled, "", new { @class = "" })
        </div>
        <div class="form-group">
            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(m => m.FullName)</span>
                <select asp-for="FullName" class="select2 form-control" asp-items="moduleOptions"></select>
            </div>
            @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "" })
        </div>
        <section id="module-parameter-container">
            <div class=""><strong> <span data-bind="text: FriendlyName"></span></strong> <span data-bind="text: Summary"></span></div>


            <section data-bind="template: { name: 'config-template', foreach: ModuleParametersList()}" ></section>


        </section>

    </div>
    <div class="box-footer clearfix">
        <div class="form-group ">
            <button type="submit" class="btn btn-default pull-right">Submit</button>
        </div>
    </div>
}



<script type="text/html" id="config-template">
    <div class="form-group">
        <div class="col-md-6"><input  data-bind="value: Identifier, attr: { name: 'Parameters[' + $index() + '].Key'}" />   </div>
        <div class="col-md-6"><input name="$index" data-bind="value: Value, attr: { name: 'Parameters[' + $index() + '].Value'}" /> </div>

    </div>
</script>